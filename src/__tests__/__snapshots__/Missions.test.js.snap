// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Testing User Interation:  Tests Mission render 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <tr>
        <td
          class="fw-bold fs-5"
        >
          Thaicom
        </td>
        <td>
          Thaicom is the name of a series of communications satellites operated from Thailand, and also the name of Thaicom Public Company Limited, which is the company that owns and operates the Thaicom satellite fleet and other telecommunication businesses in Thailand and throughout the Asia-Pacific region. The satellite projects were named Thaicom by the King of Thailand, His Majesty the King Bhumibol Adulyadej, as a symbol of the linkage between Thailand and modern communications technology.
        </td>
        <td
          class="align-middle"
        >
          <button
            class="button-status button-status-active"
            type="button"
          >
            <span>
              Active Member
            </span>
          </button>
        </td>
        <td
          class="align-middle"
        >
          <button
            class="button-join button-join-active"
            data-testid="joinButton"
            type="button"
            value="Cancel Mission"
          >
            <span>
              Cancel Mission
            </span>
          </button>
        </td>
      </tr>
    </div>
  </body>,
  "container": <div>
    <tr>
      <td
        class="fw-bold fs-5"
      >
        Thaicom
      </td>
      <td>
        Thaicom is the name of a series of communications satellites operated from Thailand, and also the name of Thaicom Public Company Limited, which is the company that owns and operates the Thaicom satellite fleet and other telecommunication businesses in Thailand and throughout the Asia-Pacific region. The satellite projects were named Thaicom by the King of Thailand, His Majesty the King Bhumibol Adulyadej, as a symbol of the linkage between Thailand and modern communications technology.
      </td>
      <td
        class="align-middle"
      >
        <button
          class="button-status button-status-active"
          type="button"
        >
          <span>
            Active Member
          </span>
        </button>
      </td>
      <td
        class="align-middle"
      >
        <button
          class="button-join button-join-active"
          data-testid="joinButton"
          type="button"
          value="Cancel Mission"
        >
          <span>
            Cancel Mission
          </span>
        </button>
      </td>
    </tr>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`Testing User Interation:  Tests Missions render 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <div>
        <table
          class="table table-striped"
        >
          <thead>
            <tr>
              <th
                class="fs-3 border"
                scope="col"
              >
                Mission
              </th>
              <th
                class="fs-3 border"
                scope="col"
              >
                Description
              </th>
              <th
                class="fs-3 border"
                scope="col"
              >
                Status
              </th>
              <th
                class="fs-3 border"
                scope="col"
              >
                 
              </th>
            </tr>
          </thead>
          <tbody />
        </table>
      </div>
    </div>
  </body>,
  "container": <div>
    <div>
      <table
        class="table table-striped"
      >
        <thead>
          <tr>
            <th
              class="fs-3 border"
              scope="col"
            >
              Mission
            </th>
            <th
              class="fs-3 border"
              scope="col"
            >
              Description
            </th>
            <th
              class="fs-3 border"
              scope="col"
            >
              Status
            </th>
            <th
              class="fs-3 border"
              scope="col"
            >
               
            </th>
          </tr>
        </thead>
        <tbody />
      </table>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;
